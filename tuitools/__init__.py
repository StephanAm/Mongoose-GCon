from enum import Enum, auto
import subprocess
from ._whiptail import Whiptail


class Colors(Enum):
    BLACK = "\033[0;30m"
    RED = "\033[0;31m" #2
    GREEN = "\033[0;32m"
    ORANGE = "\033[0;33m" #4
    BLUE = "\033[0;34m" #5
    PURPLE = "\033[0;35m" #6
    CYAN = "\033[0;36m" #7
    LIGHT_GRAY = "\033[0;37m"
    
    DARK_GRAY = "\033[1;30m" #1
    LIGHT_RED = "\033[1;31m"
    LIGHT_GREEN = "\033[1;32m"
    YELLOW = "\033[1;33m"
    LIGHT_BLUE = "\033[1;34m"
    LIGHT_PURPLE = "\033[1;35m"
    LIGHT_CYAN = "\033[1;36m"
    WHITE = "\033[1;37m"
    NC = "\033[0m"

class Alignment(Enum):
    LEFT=auto()
    RIGHT=auto()
    CENTRE=auto()

def colorize(text:str,col:Colors):
    return f'{col.value}{text}\033[0m'

def clear():
    subprocess.run('clear')


class WindowInterface:
    """Dummy class to help with type hinting for curses."""
    def addch(self,y,x,c,attr):...
    def addnstr(self,y,x,str,n,attr=None):...
    def addstr(self,y,x,str,attr=None):...
    def attroff(self):...
    def attron(self):...
    def attrset(self):...
    def bkgd(self):...
    def bkgdset(self):...
    def border(self):...
    def box(self):...
    def chgat(self):...
    def clear(self):...
    def clearok(self):...
    def clrtobot(self):...
    def clrtoeol(self):...
    def cursyncup(self):...
    def delch(self):...
    def deleteln(self):...
    def derwin(self):...
    def echochar(self):...
    def enclose(self):...
    def encoding(self):...
    def erase(self):...
    def get_wch(self):...
    def getbegyx(self):...
    def getbkgd(self):...
    def getch(self):...
    def getkey(self):...
    def getmaxyx(self):...
    def getparyx(self):...
    def getstr(self):...
    def getyx(self):...
    def hline(self):...
    def idcok(self):...
    def idlok(self):...
    def immedok(self):...
    def inch(self):...
    def insch(self):...
    def insdelln(self):...
    def insertln(self):...
    def insnstr(self):...
    def insstr(self):...
    def instr(self):...
    def is_linetouched(self):...
    def is_wintouched(self):...
    def keypad(self):...
    def leaveok(self):...
    def move(self):...
    def mvderwin(self):...
    def mvwin(self):...
    def nodelay(self):...
    def notimeout(self):...
    def noutrefresh(self):...
    def overlay(self):...
    def overwrite(self):...
    def putwin(self):...
    def redrawln(self):...
    def redrawwin(self):...
    def refresh(self):...
    def resize(self):...
    def scroll(self):...
    def scrollok(self):...
    def setscrreg(self):...
    def standend(self):...
    def standout(self):...
    def subpad(self):...
    def subwin(self):...
    def syncdown(self):...
    def syncok(self):...
    def syncup(self):...
    def timeout(self):...
    def touchline(self):...
    def touchwin(self):...
    def untouchwin(self):...
    def vline(self):...